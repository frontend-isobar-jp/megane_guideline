.hljs{display:block;overflow-x:auto;padding:0.5em;color:#abb2bf;background:#282c34}.hljs-comment,.hljs-quote{color:#5c6370;font-style:italic}.hljs-doctag,.hljs-keyword,.hljs-formula{color:#c678dd}.hljs-section,.hljs-name,.hljs-selector-tag,.hljs-deletion,.hljs-subst{color:#e06c75}.hljs-literal{color:#56b6c2}.hljs-string,.hljs-regexp,.hljs-addition,.hljs-attribute,.hljs-meta-string{color:#98c379}.hljs-built_in,.hljs-class .hljs-title{color:#e6c07b}.hljs-attr,.hljs-variable,.hljs-template-variable,.hljs-type,.hljs-selector-class,.hljs-selector-attr,.hljs-selector-pseudo,.hljs-number{color:#d19a66}.hljs-symbol,.hljs-bullet,.hljs-link,.hljs-meta,.hljs-selector-id,.hljs-title{color:#61aeee}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:bold}.hljs-link{text-decoration:underline}.fw.is-not_select>*:not(#j-modal_code_box),.fw.is-not_select #j-modal_code_box_close{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.fw.is-not_select #window_resizer_tooltip_wrapper{display:none !important}.fw.is-not_select #j-modal_code_wrap code{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;-webkit-user-select:element;-moz-user-select:element;-ms-user-select:element;user-select:element}.fw #container{padding-left:0}.fw .m-gl_nav{position:fixed;left:0;bottom:0;width:100%;z-index:10;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;background-color:#414141;padding:20px}.fw .m-gl_nav a{color:#fff;padding:0 20px;margin:5px 0;border-right:1px solid #fff;display:inline-block;line-height:130%}.fw .m-gl_nav a span{display:none}.fw .m-gl_nav a:hover{opacity:.8}.fw .m-gl_nav li{position:relative}.fw .m-gl_nav li:before{content:"";display:block;border-top:solid 2px #fff;border-right:solid 2px #fff;vertical-align:middle;width:6px;height:6px;position:absolute;top:50%}.fw .m-gl_nav li:before{transform:translate(0, -50%) rotate(-45deg);-webkit-transform:translate(0, -50%) rotate(-45deg)}.fw .m-gl_nav li:before{top:-3px;left:0;right:0;margin:auto;opacity:0;transition:.2s}.fw .m-gl_nav li.active:before{opacity:1}.fw .m-gl_nav li:last-child a{border:none}.fw .f-section{border:none}.fw .f-section>.f-section{margin-top:0}.fw [class*="a-ttl_gl_"]{position:relative}.fw h1.a-ttl_gl_detail{font-size:36px;margin-bottom:40px}@media screen and (max-width: 768px){.fw h1.a-ttl_gl_detail{font-size:26px}}@media screen and (max-width: 768px){.fw h1.a-ttl_gl_detail{margin-bottom:20px}}.fw h2.a-ttl_gl_detail{font-weight:bold;font-size:26px;margin-bottom:40px;padding-top:20px;padding-bottom:20px;border-bottom:1px solid #b2b1b1}@media screen and (max-width: 768px){.fw h2.a-ttl_gl_detail{font-size:18px}}@media screen and (max-width: 768px){.fw h2.a-ttl_gl_detail{margin-bottom:20px}}.fw h2.a-ttl_gl_detail+.f-section{padding-top:0}.fw h3.a-ttl_gl_detail{font-weight:bold;font-size:18px;margin-bottom:20px;padding:14px 20px;background:#f7f7f7;color:#111}@media screen and (max-width: 768px){.fw h3.a-ttl_gl_detail{font-size:13px}}.fw [class*="a-ttl_gl_atomic"]{position:relative}.fw [class*="a-ttl_gl_atomic"]:after{content:"";display:block;position:absolute;right:0;top:50%;transform:translateY(-50%);width:110px;line-height:30px;font-size:14px;text-align:center;border-radius:4px;color:#fff}.fw .a-ttl_gl_atomic_a:after{content:"Atoms";background-color:#9abc50}.fw .a-ttl_gl_atomic_m:after{content:"Molecules";background-color:#2D72A7}.fw .a-ttl_gl_atomic_o:after{content:"Organisms";background-color:#ead805}.fw .a-ttl_gl_atomic_t:after{content:"Templates";background-color:#50a4d4}.fw .a-ttl_gl_atomic_p:after{content:"Pages";background-color:#ea0a0a}.fw .getCode{background:url(../images/icons/code.png) no-repeat 0 50%;background-size:20px auto;padding:5px 0 5px 30px;font-weight:bold;font-size:12px;cursor:pointer}.fw .getCode:hover{opacity:0.6}.fw h2.a-ttl_gl_detail .getCode{position:absolute;bottom:-40px;right:5px}.fw h3.a-ttl_gl_detail .getCode{position:absolute;top:50%;transform:translateY(-50%);right:20px}.fw .changeLang{position:absolute;right:0;top:0;font-weight:bold;background-color:#414141;color:#fff;padding:10px}.fw .changeLang a{color:#fff;display:inline-block;padding:0 10px;opacity:0.2}.fw .changeLang a.active{opacity:1}.is-lang_jp .fw [lang="jp"]{display:block}.is-lang_jp .fw [lang="en"]{display:none}.is-lang_en .fw [lang="jp"]{display:none}.is-lang_en .fw [lang="en"]{display:block}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
